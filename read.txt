Setting Up
Configure Git (one-time setup):

bash
Copy code
git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"
Clone a Repository:

bash
Copy code
git clone <repository-url>
Basic Workflow
Check Repository Status:

bash
Copy code
git status
Stage Changes:

Stage a specific file:
bash
Copy code
git add <file>
Stage all files:
bash
Copy code
git add .
Commit Changes:

bash
Copy code
git commit -m "Your commit message"
Push Changes to GitHub:

bash
Copy code
git push origin <branch-name>
Pull Changes from GitHub:

bash
Copy code
git pull origin <branch-name>
Branching
Create a New Branch:

bash
Copy code
git branch <branch-name>
Switch to a Branch:

bash
Copy code
git checkout <branch-name>
Create and Switch to a Branch:

bash
Copy code
git checkout -b <branch-name>
Merge a Branch:

bash
Copy code
git merge <branch-name>
Remote Repositories
Add a Remote Repository:

bash
Copy code
git remote add origin <repository-url>
View Remote URLs:

bash
Copy code
git remote -v
Remove a Remote:

bash
Copy code
git remote remove <remote-name>
Logs and History
View Commit History:

bash
Copy code
git log
View One-Line Log:

bash
Copy code
git log --oneline
Undoing Changes
Unstage Changes:

bash
Copy code
git reset <file>
Undo Local Changes (to last commit):

bash
Copy code
git checkout -- <file>
Revert to a Previous Commit:

bash
Copy code
git revert <commit-hash>
Amend the Last Commit:

bash
Copy code
git commit --amend -m "Updated commit message"
Other Useful Commands
Check Current Branch:

bash
Copy code
git branch
Delete a Branch Locally:

bash
Copy code
git branch -d <branch-name>
Delete a Branch on GitHub:

bash
Copy code
git push origin --delete <branch-name>
Stash Changes (Temporary Save):

bash
Copy code
git stash
Apply Stashed Changes:

bash
Copy code
git stash apply
